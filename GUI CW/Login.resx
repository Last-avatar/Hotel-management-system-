<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAANxSURBVGhD7ZXfSxRRFMenjCDoB0Evle2MGpJbuisLChEV
        0Q+I1N1gX3uPHnrtsbd6EoKgB7EojUgisrDcHcIHxT9AlF7qIZ3xB5rVOqNF0e2c291tnT3rztx2nA32
        A1+83vne7zlz96wqVapUMDNaS/t0XaRN/Pr/YWjRfkON9olfKxMjFLkmlpzJcHi7qUXuGVrknaFGfnDB
        GvfwmbBxnGc3HaPh6CFozjbroueYomwV28rS4bbdphrRTS3KuGCNe+Kxgl48g2cxQ2xvHgvh8E640aFc
        gyBoZsqsj4WERYG9bvCs/VG0W2wr6OHevLOYhZnCUn6oj5opp7aZanSCN6BGv30MNe8Vjzgw+7eNupZG
        LliLbQ568Yw4O4FZ4lGOso1XsTFhSrIG9uegCbxpc1ZtbRKPSoJePINnMQOzxKPyjVepMflQH9uTXeN8
        z2qtKq7dgN7sdwIzMCu75jXyav7TeJUak2J06SvNCd2+lUhb77lgjXvi8Ya4GS/XeBmTxIhdG0/b1+O6
        NQYNM1Jpewp+3oy/XWsQxwrYaLw8U2pMLo1k9sV1+2pCt0bhpn9lG+0Yttjx559YY98cF647Ulbei6DX
        GsWzmCHiOMXGq2wkx9mOrpTdAQ0MwG1/zzbVlbbY6cHP7NjjBXagZ4bt75lepwOgI/1z7MSLZdaZWsm9
        DGT8hE9Oh7wrnWOLu0SZ8pIcYDWX9ZWzcGOPYAwyf4vb7MzLL6zlyQKr7V3f8EY62DvDmvrn2cnBZf7i
        uby0tQr5rxLp1STUXPdfW4p4yo5B6B0Inc8WQZ0f+spany6y0H2DbNCLauFl8ALwIvJrgJbxwvDiFMa2
        iJbcA3M6nh944XWGxQYWmfbAJBsphzAba2Ct/No4YqIt9+CX7OKbDGt/tsQaHvrXdDFhTayNPcAnMSza
        8gYVHIREO96hwoKQaMc7BUHxu6R898lSEEQUQ/nuk6UgiCiG8t0nS0EQUQzlu0+WgiCiGMp3nywFQUQx
        lO8+WZxBQUm04x0qLAiJdrxDhQUh0Y4ENyZZRUgaKiwISUOFBSFpnEHEnzwuv33SOIOoYii/fdI4g6hi
        KL990jiDqGIov33SOIOoYii/fdI4g6hiKL990jiD3IpqCkV53UgaKsyNqOZRlNeNpKHC3IhqHkV53ahK
        lSpVKhRF+Q3/3dqVMtGsNQAAAABJRU5ErkJggg==
</value>
  </data>
</root>